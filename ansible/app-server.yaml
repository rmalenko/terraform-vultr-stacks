---
- name: Website deployment
  hosts: hosting
  gather_facts: true

  collections:
    - ansible.posix
    - community.general

  roles:
    - role: common
    - role: baseline
    - role: systemd_journald
    - role: systemd_timesyncd
    - role: node_exporter
    - role: geerlingguy.certbot

  tasks:
    - name: Install NGINX
      ansible.builtin.include_role:
        name: nginxinc.nginx
      vars:
        nginx_modules:
          - geoip
          - brotli
        nginx_service_modify: true
        nginx_service_timeout: 95
        nginx_logrotate_conf_enable: true
        nginx_logrotate_conf:
          paths:
            - /var/log/nginx/*.log
          options:
            - daily
            - missingok
            - rotate 7
            - compress
            - delaycompress
            - notifempty
            - sharedscripts

    - name: Configure NGINX
      ansible.builtin.include_role:
        name: nginxinc.nginx_config
      vars:
        nginx_config_debug_output: true
        nginx_config_cleanup: true
        nginx_config_cleanup_paths:
          - directory:
              - /etc/nginx/conf.d
            recurse: false
        nginx_config_cleanup_files:
          - /etc/nginx/conf.d/default.conf
        nginx_config_main_template_enable: true
        nginx_config_main_template:
          template_file: nginx.conf.j2
          deployment_location: /etc/nginx/nginx.conf
          backup: true
          config:
            main:
              load_module:
                - modules/ngx_http_geoip_module.so
              user:
                username: www-data
              worker_cpu_affinity:
                auto: true
              worker_priority: 0
              worker_processes: auto
              worker_rlimit_core: 10000
              worker_rlimit_nofile: 10000
              worker_shutdown_timeout: 30m
              error_log:
                - file: /var/log/nginx/error.log
                  level: notice
              pid: /var/run/nginx.pid
              daemon: true
              debug_points: abort
              lock_file: logs/nginx.lock
              master_process: true
              pcre_jit: false
              thread_pool:
                - name: default
                  threads: 32
                  max_queue: 65536
                - name: molecule
                  threads: 32
              timer_resolution: 1s
              working_directory: /etc/nginx
              quic:
                bpf: false
            events:
              accept_mutex: false
              accept_mutex_delay: 500ms
              multi_accept: false
              use: epoll
              worker_aio_requests: 32
              worker_connections: 512
            # include:
            #   - /etc/nginx/modules.conf
            http:
              include:
                - /etc/nginx/conf.d/*.conf
                - /etc/nginx/conf.d/backend/*.conf
              # log:
              #   format:
              #     - name: main
              #       format: |
              #         '$remote_addr - $remote_user [$time_local] "$request" '
              #         '$status $body_bytes_sent "$http_referer" '
              #         '"$http_user_agent" "$http_x_forwarded_for"'
            stream:
              include:
                - /etc/nginx/conf.d/streams/*.conf
        nginx_config_status_enable: true
        nginx_config_status_backup: true
        nginx_config_status_port: 8888
        nginx_config_status_access_log: false
          # path: /var/log/nginx/access.log
          # format: main

        nginx_config_http_template_enable: true
        nginx_config_http_template:
          - template_file: http/default.conf.j2
            deployment_location: /etc/nginx/conf.d/{{ domain_name }}.conf
            backup: true
            config:
              upstreams:
                - name: backend
                  servers:
                    - address: 127.0.0.1:8080
                  least_conn: true
              servers:
                - core:
                    aio:
                      threads: default
                    keepalive_timeout: 75s
                    server_name:
                      - "{{ domain_name }}"
                    listen:
                      - address: 0.0.0.0
                        port: 80
                        default_server: true
                        ssl: false
                        proxy_protocol: false
                        fastopen: 12
                        backlog: 511
                        rcvbuf: 512
                        sndbuf: 512
                        deffered: false
                        bind: false
                        ipv6only: false
                        reuseport: false
                        so_keepalive: false
                      - address: "[::]"
                        port: 80
                        default_server: true
                        ssl: false
                  locations:
                    - location: '/robots.txt'
                      log_not_found: false
                      access:
                        allow: 'all'
                      log:
                        access: false
                    - location: '/'
                      rewrite:
                        return:
                          code: 301
                          url: 'https://$server_name:443$request_uri'
                - core:
                    aio:
                      threads: default
                    keepalive_timeout: 75s
                    server_name:
                      - "{{ domain_name }}"
                    listen:
                      - address: 0.0.0.0
                        port: 443
                        default_server: true
                        ssl: true
                        http2: true
                        quic: true
                        reuseport: true
                        so_keepalive:
                          keepidle: 30m
                          keepintvl: 5
                          keepcnt: 10
                      - address: "[::]"
                        port: 443
                        default_server: true
                        ssl: true
                        http2: true
                        quic: true
                        reuseport: true
                        so_keepalive:
                          keepidle: 30m
                          keepintvl: 5
                          keepcnt: 10
                  http2:
                    enable: true
                    chunk_size: 8k
                  http3:
                    enable: true
                    hq: true
                  autoindex:
                    enable: false
                  ssl:
                    certificate: /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem
                    certificate_key: /etc/letsencrypt/live/{{ domain_name }}/privkey.pem
                    trusted_certificate: /etc/letsencrypt/live/{{ domain_name }}/cert.pem
                    ciphers:
                      - ECDHE-ECDSA-AES128-GCM-SHA256
                      - ECDHE-RSA-AES128-GCM-SHA256
                      - ECDHE-ECDSA-AES256-GCM-SHA384
                      - ECDHE-RSA-AES256-GCM-SHA384
                      - ECDHE-ECDSA-CHACHA20-POLY1305
                      - ECDHE-RSA-CHACHA20-POLY1305
                      - DHE-RSA-AES128-GCM-SHA256
                      - DHE-RSA-AES256-GCM-SHA384
                    ecdh_curve:
                      - secp521r1
                      - secp384r1
                    conf_command: Protocol TLSv1.2
                    handshake_timeout: 60s
                    prefer_server_ciphers: false
                    protocols:
                      - TLSv1.1
                      - TLSv1.2
                    session_cache:
                      builtin:
                        enable: true
                        size: 20480
                      # shared:
                      #   name: SSL
                      #   size: 10m
                    session_tickets: true
                    session_timeout: 1d
                    verify_client: false
                    verify_depth: 1
                  headers:
                    add_headers:
                      - name: 'Strict-Transport-Security'
                        value: '"max-age=63072000"'
                        always: true
                      - name: 'X-Frame-Options'
                        value: '"SAMEORIGIN"'
                        always: false
                    add_trailers:
                      - name: 'Strict-Transport-Security'
                        value: '"max-age=63072000"'
                        always: true
                      - name: 'X-Frame-Options'
                        value: '"SAMEORIGIN"'
                        always: false
                  log:
                    access:
                      - path: /var/log/nginx/{{ domain_name }}_access.log
                        # format: main
                        format: combined
                        buffer: 1m
                        gzip: 5
                        flush: 1h
                  locations:
                    - location: /
                      proxy:
                        pass: http://backend/
                        connect_timeout: '90s'
                        bind: false
                        set_header:
                          - field: Host
                            value: $http_host
                          # - field: 'Host'
                          #   value: '$host'
                          - field: X-Forwarded-For
                            value: $proxy_add_x_forwarded_for
                          - field: X-Real-IP
                            value: $remote_addr
                          - field: REMOTE_ADDR
                            value: $remote_addr

  vars:
    docker_compose_version: "2.20.3"
    systemd_journald_systemmaxuse: "2G"
    node_exporter_version: 1.6.1 # https://github.com/prometheus/node_exporter/releases
    node_exporter_enabled_collectors:
      - systemd
      - textfile:
          directory: "{{ node_exporter_textfile_dir }}"
      - filesystem:
          ignored-mount-points: "^/(sys|proc|dev)($|/)"
          ignored-fs-types: "^(sys|proc|auto)fs$"

    certbot_admin_email: rmalenko@gmail.com
    certbot_auto_renew: true
    certbot_auto_renew_hour: 2
    certbot_auto_renew_minute: 16
    certbot_auto_renew_options: --quiet
    certbot_create_if_missing: true
    certbot_create_method: standalone
    certbot_install_method: snap
    certbot_testmode: true # Enable test mode to only run a test request without actually creating certificates.
    certbot_create_standalone_stop_services:
      - nginx
    certbot_certs:
      - domains: "{{ domain_name }}"
